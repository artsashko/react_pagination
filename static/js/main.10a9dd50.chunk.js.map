{"version":3,"sources":["components/Content.js","components/Pagination.js","App.js","index.js"],"names":["Content","total","perPage","page","perPageChange","info","firstVisibleId","lastVisibleId","content","Array","map","_","i","id","text","name","value","onChange","className","key","filter","item","Pagination","pageChange","lastPage","Math","ceil","firstPageTrigger","lastPageTrigger","type","onClick","disabled","classNames","invisible","App","state","totalElements","currentPage","withInfo","setState","event","target","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10a9dd50.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Content = (\n  { total,\n    perPage,\n    page,\n    perPageChange,\n    info },\n) => {\n  const perPageOptions = [3, 5, 10, 20];\n  const firstVisibleId = (page - 1) * perPage + 1;\n  const lastVisibleId = (firstVisibleId + perPage - 1) > total\n    ? total\n    : firstVisibleId + perPage - 1;\n  const content = [...Array(total)]\n    .map((_, i) => ({\n      id: i + 1,\n      text: 'Some text',\n    }));\n\n  return (\n    <>\n      <select\n        name=\"perPage\"\n        value={perPage}\n        onChange={perPageChange}\n        className=\"page-selector\"\n      >\n        {perPageOptions.map(value => (\n          <option value={value} key={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n\n      <ul>\n        {content.filter(item => item.id >= firstVisibleId\n        && item.id <= lastVisibleId)\n          .map(item => (\n            <li key={item.id} className=\"li\">\n              {item.id}\n              {'. '}\n              {item.text}\n            </li>\n          ))}\n      </ul>\n\n      { info && (\n        <p className=\"page-info\">\n          {`${firstVisibleId} - ${lastVisibleId} of ${total}`}\n        </p>\n      )}\n    </>\n  );\n};\n\nContent.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  perPageChange: PropTypes.func.isRequired,\n  info: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Content } from './Content';\n\nexport const Pagination = (\n  { total,\n    perPage,\n    page,\n    pageChange,\n    perPageChange,\n    info },\n) => {\n  const lastPage = Math.ceil(total / perPage);\n  const firstPageTrigger = (page === 1 || page === 2);\n  const lastPageTrigger = (page === lastPage || page === lastPage - 1);\n\n  return (\n    <div className=\"wrapper\">\n      <Content\n        total={total}\n        perPage={perPage}\n        page={page}\n        perPageChange={perPageChange}\n        info={info}\n      />\n\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            onClick={() => pageChange(page - 1)}\n            disabled={page === 1}\n          >\n            {'<'}\n          </button>\n        </li>\n        <li className=\"page-item\">\n          { firstPageTrigger || (\n            <button\n              type=\"button\"\n              onClick={() => pageChange(1)}\n            >\n              {1}\n            </button>\n          )}\n        </li>\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className={classNames('page-link', {\n              invisible: page === 1,\n            })}\n            onClick={() => pageChange(page - 1)}\n          >\n            {page - 1}\n          </button>\n        </li>\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"page-link current\"\n            onClick={() => pageChange(page)}\n          >\n            {page}\n          </button>\n        </li>\n        <li className=\"page-item\">\n          { page === lastPage || (\n            <button\n              type=\"button\"\n              onClick={() => pageChange(page + 1)}\n            >\n              {page + 1}\n            </button>\n          )}\n        </li>\n        <li className=\"page-item\">\n          { lastPageTrigger || (\n            <button\n              type=\"button\"\n              onClick={() => pageChange(lastPage)}\n            >\n              {lastPage}\n            </button>\n          )}\n        </li>\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            onClick={() => pageChange(page + 1)}\n            disabled={page === lastPage}\n          >\n            {'>'}\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  pageChange: PropTypes.func.isRequired,\n  perPageChange: PropTypes.func.isRequired,\n  info: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    totalElements: 42,\n    perPage: 3,\n    currentPage: 1,\n    withInfo: true,\n  }\n\n  pageChange = (page) => {\n    if (page === 0) {\n      return;\n    }\n\n    this.setState({\n      currentPage: page,\n    });\n  }\n\n  perPageChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      perPage: +value,\n      currentPage: 1,\n    });\n  }\n\n  render() {\n    const { totalElements, perPage, currentPage, withInfo } = this.state;\n\n    return (\n      <Pagination\n        total={totalElements}\n        perPage={perPage}\n        page={currentPage}\n        pageChange={this.pageChange}\n        perPageChange={this.perPageChange}\n        info={withInfo}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}